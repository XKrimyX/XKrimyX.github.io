<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ESP8266+TFT简易时钟</title>
    <link href="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/"/>
    <url>/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="ESP8266-TFT简易时钟"><a href="#ESP8266-TFT简易时钟" class="headerlink" title="ESP8266+TFT简易时钟"></a>ESP8266+TFT简易时钟</h1><h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0.前言"></a><strong>0.前言</strong></h2><blockquote><p>记录复刻一个小电视时遇到的坑坑洼洼<br>原案例太过繁琐，作为学习仅实现了部分功能(并不是因为懒…)</p></blockquote><h3 id="开发环境："><a href="#开发环境：" class="headerlink" title="开发环境："></a>开发环境：</h3><blockquote><p>Platformio IDE<br>Arduino</p></blockquote><h3 id="相关链接："><a href="#相关链接：" class="headerlink" title="相关链接："></a>相关链接：</h3><ul><li><a href="https://did321.github.io/2021/07/28/ESP32-TFT-%E5%88%86%E5%85%89%E6%A3%B1%E9%95%9C%E5%AE%9E%E7%8E%B0%E9%80%8F%E6%98%8E%E5%B0%8F%E7%94%B5%E8%A7%86/">ESP32+TFT+分光棱镜实现透明小电视</a></li><li><a href="https://blog.csdn.net/qq_43168623/article/details/117983877">NodeMCU与TFT屏引脚连接方式</a></li><li><a href="https://zhaomenghuan.js.org/blog/platformio-nodemcu-getting-started.html">VSCode配置Platformio</a></li></ul><h3 id="成品："><a href="#成品：" class="headerlink" title="成品："></a>成品：</h3><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=906031397&bvid=BV1GM4y197JF&cid=984176507&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"> </iframe></div>  <br />  <h2 id="1-准备"><a href="#1-准备" class="headerlink" title="1.准备"></a><strong>1.准备</strong></h2><h3 id="材料："><a href="#材料：" class="headerlink" title="材料："></a>材料：</h3><ul><li>ESP8266-NodeMCU</li><li>TFT屏(1.44英寸)</li><li>杜邦线(母对母)</li><li>数据线(Micro-USB)</li></ul><h3 id="库："><a href="#库：" class="headerlink" title="库："></a>库：</h3>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp">  <span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;Arduino.h&gt;</span></span><br><span class="hljs-comment">/*配网*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ESP8266WiFi.h&gt;</span>          </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;DNSServer.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ESP8266WebServer.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;WiFiManager.h&gt;</span></span><br><span class="hljs-comment">/*TFT*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;TFT_eSPI.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;SPI.h&gt;</span> </span><br><span class="hljs-comment">/*模*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;MyFonts.h&quot;</span><span class="hljs-comment">//导入字库        </span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Pic_Connect.h&quot;</span><span class="hljs-comment">//导入连接图片</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;Pic_Weather.h&quot;</span><span class="hljs-comment">//导入天气图片</span></span><br><span class="hljs-comment">/*时间*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;NTPClient.h&gt;</span></span><br><span class="hljs-comment">/*解析*/</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ESP8266HTTPClient.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ArduinoJson.h&gt;</span></span><br></code></pre></td></tr></table></figure><h3 id="引脚连接："><a href="#引脚连接：" class="headerlink" title="引脚连接："></a>引脚连接：</h3><table><thead><tr><th align="center">TFT</th><th align="center">NodeMCU</th></tr></thead><tbody><tr><td align="center">VCC</td><td align="center">3V</td></tr><tr><td align="center">GND</td><td align="center">GND</td></tr><tr><td align="center">LED</td><td align="center">3V</td></tr><tr><td align="center">CLK</td><td align="center">D5</td></tr><tr><td align="center">SDI</td><td align="center">D7</td></tr><tr><td align="center">RS</td><td align="center">D3</td></tr><tr><td align="center">RST</td><td align="center">D4</td></tr><tr><td align="center">CS</td><td align="center">D8</td></tr></tbody></table><h3 id="TFT-eSPI库配置："><a href="#TFT-eSPI库配置：" class="headerlink" title="TFT_eSPI库配置："></a>TFT_eSPI库配置：</h3><p>在使用TFT_eSPI库之前，需要根据自己的屏幕参数进行配置<br>首先找到库下的User_Setup.h文件，从上往下开始看，主要需要修改的有：</p><ul><li><p>选择驱动  </p><img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/tft_1.png" class="" title="驱动"></li><li><p>设置屏幕大小  </p><img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/tft_2.png" class="" title="大小"></li><li><p>设置显示类型  </p><img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/tft_3.png" class="" title="显示"><p style="color:gray;font-size:12px" align="center">如果有显示偏移等问题的，请逐一尝试</p></li><li><p>引脚定义  </p><img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/tft_4.png" class="" title="引脚"></li></ul><h2 id="2-代码"><a href="#2-代码" class="headerlink" title="2.代码"></a><strong>2.代码</strong></h2><h3 id="图片显示："><a href="#图片显示：" class="headerlink" title="图片显示："></a>图片显示：</h3><ul><li>首先打开图片取模软件ImageConverter565.exe，Open image选择图片，选择Arduino，保存为.c文件  </li><li>新建<code>Pic_Weather.h</code>储存图片的模数据  <img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/photo_1.png" class="" title="图片模">  <blockquote><p>其中利用了<code>PROGMEM</code>将数据写进缓存，即程序存储空间，以减少对动态内存的占用(PS:<code>PROGMEM</code>最好写到最后面，因为有些版本Arduino似乎不兼容其它写法，像我一开始就因为将<code>PROGMEM</code>写到开头一直通不过编译…)<br>这里我直接用了<a href="https://did321.github.io/about/">DID迪</a>的图片(天气图片和WiFi连接图片)和字模数据  </p></blockquote></li><li>然后建数组方便调用   <figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs angelscript"><span class="hljs-keyword">const</span> <span class="hljs-built_in">uint16</span>_t* ConnectWifi [] PROGMEM = &#123;Wifi1,Wifi2,Wifi3,Wifi4,Wifi5,Wifi6&#125;;<br><span class="hljs-keyword">const</span> <span class="hljs-built_in">uint16</span>_t* weather [] PROGMEM = &#123;weather0,weather1,weather2,weather3,weather4,weather5,weather6,weather7,weather8&#125;;<br></code></pre></td></tr></table></figure>最后调用<code>pushImage(int32_t x, int32_t y, int32_t w, int32_t h, const uint16_t *data)</code>函数即可在指定位置显示图片</li></ul><h3 id="文字显示："><a href="#文字显示：" class="headerlink" title="文字显示："></a>文字显示：</h3><ul><li>同样先打开<code>PCtoLCD2002.exe</code>进行文字取模  </li><li>新建<code>MyFonts.h</code>存储数据<img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/photo_2.png" class="" title="文字模">  </li><li>然后创建结构体与数组方便调用<img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/photo_3.png" class="" title="文字"></li><li>调用<code>drawBitmap(int16_t x, int16_t y, const uint8_t *bitmap, int16_t w, int16_t h, uint16_t color)</code>加载汉字</li><li>另写<code>drawSingleWord</code>与<code>drawSentences</code>函数方便调用<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/*单个汉字*/</span>  <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">drawSingleWord</span><span class="hljs-params">(<span class="hljs-type">int32_t</span> x,<span class="hljs-type">int32_t</span> y,<span class="hljs-type">const</span> <span class="hljs-type">char</span> c[<span class="hljs-number">3</span>],<span class="hljs-type">uint32_t</span> color)</span></span>&#123;  <br>  <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> k = <span class="hljs-number">0</span>; k &lt; <span class="hljs-number">26</span>; k++)  <br>    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">pgm_read_byte</span>((<span class="hljs-type">char</span> *)&amp;hanzi[k].Index[<span class="hljs-number">0</span>]) == c[<span class="hljs-number">0</span>] &amp;&amp; <span class="hljs-built_in">pgm_read_byte</span>((<span class="hljs-type">char</span> *)&amp;hanzi[k].Index[<span class="hljs-number">1</span>]) == c[<span class="hljs-number">1</span>] &amp;&amp; <span class="hljs-built_in">pgm_read_byte</span>((<span class="hljs-type">char</span> *)&amp;hanzi[k].Index[<span class="hljs-number">2</span>]) == c[<span class="hljs-number">2</span>])  <br>    &#123;   <br>        tft.<span class="hljs-built_in">drawBitmap</span>(x, y, hanzi[k].hz_Id, <span class="hljs-number">16</span>, <span class="hljs-number">16</span>, color);  <br>    &#125;  <br>&#125;  <br><span class="hljs-comment">/*多个汉字*/</span>  <br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">drawSentences</span><span class="hljs-params">(<span class="hljs-type">int32_t</span> x,<span class="hljs-type">int32_t</span> y,<span class="hljs-type">const</span> <span class="hljs-type">char</span> str[],<span class="hljs-type">uint32_t</span> color)</span>  </span><br><span class="hljs-function"></span>&#123;  <br>  <span class="hljs-type">int</span> x0=x;  <br>  <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">strlen</span>(str);i+=<span class="hljs-number">3</span>)  <span class="hljs-comment">//str是首地址，每个汉字占3个字节，第一次+0 第二次+3...就分别传了不同汉字的首地址给上一个函数处理</span><br>  &#123;  <br>    <span class="hljs-built_in">drawSingleWord</span>(x0,y,str+i,color);  <br>    x0 += <span class="hljs-number">17</span>;  <br>  &#125;  <br>&#125;  <br></code></pre></td></tr></table></figure><strong>注意：</strong>这里读取字模数据要用<code>pgm_read_byte</code>函数，当时因为这个问题导致堆栈溢出，卡在这里一整天..</li></ul><h3 id="配网："><a href="#配网：" class="headerlink" title="配网："></a>配网：</h3><ul><li>配网使用了<code>WiFiManager</code>库，功能很简单，直接给出代码  <figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">void wifi<span class="hljs-constructor">_connect()</span>&#123;  <br>  WiFiManager wifiManager;  <br>    <br>    <span class="hljs-comment">// 自动连接WiFi。以下语句的参数是连接ESP8266时的WiFi名称  </span><br>    wifiManager.auto<span class="hljs-constructor">Connect(<span class="hljs-string">&quot;AutoConnectAP&quot;</span>)</span>;  <br>    <br>    <span class="hljs-comment">// 如果您希望该WiFi添加密码，可以使用以下语句：  </span><br>    <span class="hljs-comment">// wifiManager.autoConnect(&quot;AutoConnectAP&quot;, &quot;12345678&quot;);  </span><br>    <span class="hljs-comment">// 以上语句中的12345678是连接AutoConnectAP的密码  </span><br>    <br>    <span class="hljs-comment">// WiFi连接成功后将通过串口监视器输出连接成功信息   </span><br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(<span class="hljs-string">&quot;&quot;</span>);   <br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>print(<span class="hljs-string">&quot;ESP8266 Connected to &quot;</span>);  <br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(WiFi.<span class="hljs-constructor">SSID()</span>);              <span class="hljs-comment">// WiFi名称  </span><br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>print(<span class="hljs-string">&quot;IP address:\t&quot;</span>);  <br>    <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(<span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">WiFi</span>.</span></span>local<span class="hljs-constructor">IP()</span>);           <span class="hljs-comment">// IP  </span><br>    tft.fill<span class="hljs-constructor">Screen(TFT_WHITE)</span>;  <br>    tft.push<span class="hljs-constructor">Image(14, 65, 100, 20, ConnectWifi[5])</span>;  <br>    tft.set<span class="hljs-constructor">Cursor(20, 30, 1)</span>;                <span class="hljs-comment">//设置文字开始坐标(20,30)及1号字体  </span><br>    tft.set<span class="hljs-constructor">TextSize(1)</span>;  <br>    draw<span class="hljs-constructor">Sentences(22,95,<span class="hljs-string">&quot;正在初始化&quot;</span>,TFT_GREEN)</span>;  <br>    tft.println(<span class="hljs-string">&quot;WiFi Connected!&quot;</span>);  <br>      <br>    delay(<span class="hljs-number">500</span>);  <br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="时间获取："><a href="#时间获取：" class="headerlink" title="时间获取："></a>时间获取：</h3><ul><li>联网后通过<code>NTPClient</code>来获取时间，简单格式化一下即可，部分代码如下  <figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">/*转换时间*/</span>  <br>  unsigned long epochTime = timeClient.get<span class="hljs-constructor">EpochTime()</span>;  <br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>print(<span class="hljs-string">&quot;Epoch Time: &quot;</span>);  <br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(epochTime);  <br>  <span class="hljs-comment">//打印时间  </span><br>  <span class="hljs-built_in">int</span> currentHour = timeClient.get<span class="hljs-constructor">Hours()</span>;<span class="hljs-comment">//hour  </span><br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>print(<span class="hljs-string">&quot;Hour: &quot;</span>);  <br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(currentHour);  <br>  <span class="hljs-built_in">int</span> currentMinute = timeClient.get<span class="hljs-constructor">Minutes()</span>;<span class="hljs-comment">//minute  </span><br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>print(<span class="hljs-string">&quot;Minutes: &quot;</span>);  <br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(currentMinute);  <br>  <span class="hljs-built_in">int</span> currentSecond = timeClient.get<span class="hljs-constructor">Seconds()</span>;<span class="hljs-comment">//second  </span><br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>print(<span class="hljs-string">&quot;Second: &quot;</span>);  <br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(currentSecond);  <br>  <span class="hljs-built_in">int</span> currentWeekDay = timeClient.get<span class="hljs-constructor">Day()</span>;<span class="hljs-comment">//weekday  </span><br>  <span class="hljs-comment">// String weekDay = weekDays[currentWeekDay];//转换  </span><br>  <span class="hljs-comment">// char week[weekDay.length() + 1];//转换  </span><br>  <span class="hljs-comment">// weekDay.toCharArray(week,weekDay.length() + 1);//转换  </span><br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>print(<span class="hljs-string">&quot;Week Day: &quot;</span>);  <br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(currentWeekDay);  <br>  <span class="hljs-comment">//将epochTime换算成年月日  </span><br>  <span class="hljs-keyword">struct</span> tm *ptm = gmtime ((time_t *)&amp;epochTime);  <br>  <span class="hljs-built_in">int</span> currentMonthDay = ptm-&gt;tm_mday;<span class="hljs-comment">//monthday  </span><br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>print(<span class="hljs-string">&quot;Month day: &quot;</span>);  <br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(currentMonthDay);  <br>  <span class="hljs-built_in">int</span> currentMonth = ptm-&gt;tm_mon+<span class="hljs-number">1</span>;<span class="hljs-comment">//month  </span><br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>print(<span class="hljs-string">&quot;Month: &quot;</span>);  <br>  <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">Serial</span>.</span></span>println(currentMonth);  <br></code></pre></td></tr></table></figure></li></ul><h3 id="天气获取："><a href="#天气获取：" class="headerlink" title="天气获取："></a>天气获取：</h3><ul><li>调用心知天气API，相关资料请自行查阅</li><li><code>ESP8266HTTPClient</code>库提供了HTTP请求的方法</li><li>将返回的结果通过<code>ArduinoJson</code>库进行解析</li><li>相关代码都在<a href="https://github.com/XKrimyX/SimpleScreen">源文件</a>里</li></ul><h3 id="绘制界面："><a href="#绘制界面：" class="headerlink" title="绘制界面："></a>绘制界面：</h3><ul><li>将前面的功能整合即可</li><li>下面给出代码<figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">void show<span class="hljs-constructor">_main(<span class="hljs-params">uint16_t</span> <span class="hljs-params">fg</span>, <span class="hljs-params">uint16_t</span> <span class="hljs-params">bg</span>, <span class="hljs-params">int</span> <span class="hljs-params">currentHour</span>, <span class="hljs-params">int</span> <span class="hljs-params">currentMinute</span>,<span class="hljs-params">int</span> <span class="hljs-params">currentMonth</span>,<span class="hljs-params">int</span> <span class="hljs-params">currentMonthDay</span>,<span class="hljs-params">int</span> <span class="hljs-params">currentWeekDay</span>)</span>&#123;  <br>  tft.fill<span class="hljs-constructor">Screen(TFT_BLACK)</span>;  <br>  tft.set<span class="hljs-constructor">SwapBytes(<span class="hljs-params">true</span>)</span>;             <span class="hljs-comment">//使图片颜色由RGB-&gt;BGR  </span><br>  <span class="hljs-comment">//delay(100);  </span><br>  tft.push<span class="hljs-constructor">Image(55, 96,  30, 30, <span class="hljs-params">temIcon</span>)</span>;<span class="hljs-comment">//温度贴图  </span><br>  tft.draw<span class="hljs-constructor">FastHLine(4, 25, 120, <span class="hljs-params">tft</span>.<span class="hljs-params">alphaBlend</span>(0, TFT_RED,  <span class="hljs-params">fg</span>)</span>);<span class="hljs-comment">//绘制线  半透明颜色0-255  </span><br>  tft.draw<span class="hljs-constructor">FastHLine(4, 95, 120, <span class="hljs-params">tft</span>.<span class="hljs-params">alphaBlend</span>(0, TFT_RED,  <span class="hljs-params">fg</span>)</span>);<span class="hljs-comment">//绘制线  半透明颜色0-255  </span><br>  <span class="hljs-comment">//tft.drawFastHLine(10, 53, 108, tft.alphaBlend(0, bg,  fg));  </span><br>  <span class="hljs-comment">/*时间显示*/</span>  <br>  <span class="hljs-keyword">if</span>(currentHour-<span class="hljs-number">10</span> &lt; <span class="hljs-number">0</span>)  <br>  &#123;showtext(<span class="hljs-number">72</span>,<span class="hljs-number">7</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,TFT_YELLOW,bg,<span class="hljs-string">&quot; &quot;</span> + (String)currentMonth+<span class="hljs-string">&quot;/&quot;</span>+(String)currentMonthDay);&#125;  <br>  <span class="hljs-keyword">else</span>  <br>  &#123;showtext(<span class="hljs-number">72</span>,<span class="hljs-number">7</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,TFT_YELLOW,bg,(String)currentMonth+<span class="hljs-string">&quot;/&quot;</span>+(String)currentMonthDay);&#125;<span class="hljs-comment">//date  </span><br>  <span class="hljs-keyword">if</span>(currentHour-<span class="hljs-number">10</span> &lt; <span class="hljs-number">0</span>)  <br>  &#123;showtext(<span class="hljs-number">70</span>,<span class="hljs-number">35</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,TFT_GREENYELLOW,bg,<span class="hljs-string">&quot;0&quot;</span>+(String)currentHour+<span class="hljs-string">&quot;:\n&quot;</span>);&#125;  <br>  <span class="hljs-keyword">else</span>  <br>  &#123;showtext(<span class="hljs-number">70</span>,<span class="hljs-number">35</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,TFT_GREENYELLOW,bg,(String)currentHour+<span class="hljs-string">&quot;:\n&quot;</span>);&#125;<span class="hljs-comment">//hour  </span><br>  <span class="hljs-keyword">if</span>((currentMinute-<span class="hljs-number">10</span>)&lt;<span class="hljs-number">0</span>)  <br>  &#123;showtext(<span class="hljs-number">85</span>,<span class="hljs-number">65</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,TFT_MAGENTA,bg,<span class="hljs-string">&quot;0&quot;</span>+(String)currentMinute);&#125;  <br>  <span class="hljs-keyword">else</span>  <br>  &#123;showtext(<span class="hljs-number">85</span>,<span class="hljs-number">65</span>,<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,TFT_MAGENTA,bg,(String)currentMinute);&#125;<span class="hljs-comment">//minute  </span><br>  draw<span class="hljs-constructor">Sentences(5, 103, <span class="hljs-params">weekDays</span>[<span class="hljs-params">currentWeekDay</span>], TFT_YELLOW)</span>;<span class="hljs-comment">//weekday  </span><br>  <br>  <span class="hljs-comment">/*天气显示*/</span>  <br>  tft.push<span class="hljs-constructor">Image(0, 30,  64, 64, <span class="hljs-params">weather</span>[<span class="hljs-params">ph</span>])</span>;  <br>  draw<span class="hljs-constructor">Sentences(45, 103, <span class="hljs-params">now_wea</span>, TFT_YELLOW)</span>;<span class="hljs-comment">//天气  </span><br>  draw<span class="hljs-constructor">Sentences(5, 5, <span class="hljs-string">&quot;丽水&quot;</span>, TFT_GOLD)</span>;<span class="hljs-comment">//地名  </span><br>  <span class="hljs-built_in">int</span> temp_color;  <br>  <span class="hljs-keyword">if</span> (atoi(now_temperature.c<span class="hljs-constructor">_str()</span>) &lt;=<span class="hljs-number">5</span> )&#123;  <br>    temp_color=TFT_BLUE;  <br>  &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(atoi(now_temperature.c<span class="hljs-constructor">_str()</span>) &lt;=<span class="hljs-number">15</span> )&#123;  <br>    temp_color=TFT_SKYBLUE;  <br>  &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(atoi(now_temperature.c<span class="hljs-constructor">_str()</span>) &lt;=<span class="hljs-number">34</span> )&#123;  <br>    temp_color=TFT_GREEN;  <br>  &#125;<span class="hljs-keyword">else</span>&#123;  <br>    temp_color=TFT_RED;  <br>  &#125;  <br>  <span class="hljs-keyword">if</span>(atoi(now_temperature.c<span class="hljs-constructor">_str()</span>)&gt;=<span class="hljs-number">10</span>)  <br>  showtext(<span class="hljs-number">80</span>,<span class="hljs-number">105</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,temp_color,bg,now_temperature);<span class="hljs-comment">//温度 </span><br>  <span class="hljs-keyword">else</span> <br>  showtext(<span class="hljs-number">80</span>,<span class="hljs-number">105</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,temp_color,bg,<span class="hljs-string">&quot; &quot;</span> + now_temperature);<span class="hljs-comment">//温度  </span><br>  showtext(<span class="hljs-number">105</span>,<span class="hljs-number">100</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,temp_color,bg,<span class="hljs-string">&quot;.\n&quot;</span>);  <br>  showtext(<span class="hljs-number">112</span>,<span class="hljs-number">108</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,temp_color,bg,<span class="hljs-string">&quot;C\n&quot;</span>);  <br>&#125;  <br></code></pre></td></tr></table></figure></li></ul><h2 id="3-结尾"><a href="#3-结尾" class="headerlink" title="3.结尾"></a><strong>3.结尾</strong></h2><h3 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h3><ul><li>有基本的<code>时钟</code>、<code>天气</code>功能  </li><li>每<code>四分钟</code>刷新一次天气，及时获取<code>最新天气状况及温度</code></li><li><code>温度的显示颜色</code>会根据其数值高低变化，低温趋近蓝色，高温趋近红色</li></ul><h3 id="成品展示："><a href="#成品展示：" class="headerlink" title="成品展示："></a>成品展示：</h3><img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/end_3.jpg" class="" title="wificonnect">  <p style="color:gray;font-size:12px" align="center">WiFi连接界面</p> <img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/end_2.jpg" class="" title="wificonnected">  <p style="color:gray;font-size:12px" align="center">初始化界面</p>  <img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/end_1.jpg" class="" title="main">  <p style="color:gray;font-size:12px" align="center">主界面</p>  <h3 id="附言："><a href="#附言：" class="headerlink" title="附言："></a>附言：</h3><ul><li>原本只是想把现成的固件刷到NodeMCU上复刻一个小电视，做个桌面小摆件的，结果ESP8266+TFT的方案少之又少，且大多数源码因为版本问题无法通过编译</li><li>只好照着别人的思路从零开始手撸代码</li><li>前前后后查资料+排BUG大概花了一个星期整的时间T_T</li><li>分光棱镜已经到手了，但是还没想好该如何利用，只好先搁置在一边了…  <img src="/2023/02/14/ESP8266-TFT%E7%AE%80%E6%98%93%E6%97%B6%E9%92%9F/end_4.jpg" class="" title="mirro"></li></ul>]]></content>
    
    
    <categories>
      
      <category>嵌入式</category>
      
    </categories>
    
    
    <tags>
      
      <tag>开发板</tag>
      
      <tag>嵌入式</tag>
      
      <tag>ESP8266</tag>
      
      <tag>NodeMCU</tag>
      
      <tag>C/C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World - 博客上线</title>
    <link href="/2023/02/13/hello-world/"/>
    <url>/2023/02/13/hello-world/</url>
    
    <content type="html"><![CDATA[<h2 id="Krimy’s-Blog"><a href="#Krimy’s-Blog" class="headerlink" title="Krimy’s Blog"></a>Krimy’s Blog</h2><h3 id="引"><a href="#引" class="headerlink" title="引"></a><strong>引</strong></h3><blockquote><p>2023年2月13日晚<br>个人博客正式上线，浅浅记录一下~</p></blockquote><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a><strong>内容</strong></h3><blockquote><p>学习心得<br>随笔 </p></blockquote><h3 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a><strong>联系方式</strong></h3><blockquote><p><a href="tencent://Message/?Uin=2046760145&websiteName=www.oicqzone.com&Menu=yes">QQ</a>: 2046760145<br><a href="https://space.bilibili.com/34548076">B站</a>: 亦生缘丶<br><a href="https://github.com/XKrimyX">GitHub</a>: XKrimyX</p></blockquote><hr><center>吾日三省吾身</center>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
